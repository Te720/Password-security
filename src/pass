#! /bin/bash

###INSTALL###

if [ -e src/pass ]; then
    chmod go-rwx "$0"
    if [ ! -e /usr/bin/shc ]; then
        sudo apt -y install -y shc -y
    fi
    shc -f "$0" -o "$0"
    chmod u-w "$0"
fi
if [ -e "$0.x.c" ]; then
    rm "$0.x.c"
fi
if [ ! -e /bin/pass ]; then
    cp src/pass /bin
fi
if [ "$0" = "$(basename pass)" ] && [ ! -e /etc/.raulm/.Ye ] && [ ! -e /var/.Hj ] && [ ! -e /usr/local/.ko ]; then
    mkdir /etc/.raulm
    mkdir /etc/.raulm/.Ye
    chmod go-rwx /etc/.raulm
    mkdir /var/.Hj
    chmod go-rwx /var/.Hj
    mkdir /usr/local/.ko
    chmod go-rwx /usr/local/.ko
fi
    
#######

python3 -c "
from hashlib import *
import os
if not os.path.exists('/etc/.raulm/.Ye/.key'):
   open('/etc/.raulm/.Ye/.key', 'wb').write(pbkdf2_hmac('sha256', password=b'thisiswhat', salt=b'', iterations=100000, dklen=32))
"

e="$0"
export e

check() {
        dec=$(python3 -c "
import os            
import sys
import base64
from Crypto.Cipher import AES
from Crypto.Util.Padding import *

key = open('/etc/.raulm/.Ye/.key', 'rb').read()
with open('/usr/local/.ko/.Yeiv', 'rb') as fi:
    for line in fi:
        if os.path.basename(os.environ['e'].encode()) in line:
            pass_hash = base64.b64decode(line.split(b':')[1].strip(b'\n'))
with open('/var/.Hj/.Yerws', 'rb') as file:
    for lin in file:                                                                                                                                          
        if os.path.basename(os.environ['e'].encode()) in lin:
            cipher = AES.new(key, AES.MODE_CBC, iv=base64.b64decode(lin.split(b':')[1].strip(b'\n')))
            print(unpad(cipher.decrypt(pass_hash), AES.block_size).decode())")

    if [ "${pass}" != "${dec}" ]; then
        echo -e "\e[1;31mWrong"
        exit
    fi
}


if [ "$(basename "$0")" = "pass" ] && [ -z "$1" ]; then
    echo -e "\e[1mUsage:\e[0m pass [argument][file1][file2]...\n\nNo argument:\t\t\tSecure files or one file by password\n-r --remove:\t\t\t\tRemove security password from files\npass 'none':\t\t\t\tshow this help message\n\n\e[1mFor secured files:\nUsage:\e[0m [file][argument]\n\n-c --change:\t\t\t\tChange password\nNone:\t\t\t\tstart file with password\n\n\e[1me.g:\e[0m -c argument will not work in secured file so try to change it or use another one"
elif [ "$(basename "$0")" != "pass" ] && [[ "$1" = !(-c|--change) ]]; then
    read -rsp "Enter password: " pass
    check
    echo
elif [ "$(basename "$0")" != "pass" ] && [[ "$1" =~ ^(-c|--change) ]]; then
    read -rsp "Enter current password: " pass
    check
    sed -i "/$(basename "$0"):/d" /usr/local/.ko/.Yeiv /var/.Hj/.Yerws
    if trap '' SIGINT; then
        echo
        read -rsp "Change password: " passd
    fi
    export passd
    python3 -c "
import os
import sys
import base64
from Crypto.Cipher import AES
from Crypto.Util.Padding import *

key = open('/etc/.raulm/.Ye/.key', 'rb').read()
cipher = AES.new(key, AES.MODE_CBC)
with open('/usr/local/.ko/.Yeiv', 'a') as f:
    f.write(os.path.basename(os.environ['e']) + f.write(':')
with open('/var/.Hj/.Yerws', 'a') as fi:
    fi.write(os.path.basename(os.environ['e']) + fi.write(':')
with open('/usr/local/.ko/.Yeiv', 'ab') as fb:
    fb.write(cipher.encrypt(pad(base64.b64encode(os.environ['passd'])), AES.block_size)) + fb.write(b'\n')
with open('/var/.Hj/.Yerws', 'ab') as fbi:
    fbi.write(base64.b64encode(cipher.iv) + fbi.write(b'\n')"
    echo -e "\n\e[1;32mpassword successfully updated"
    exit
elif [ "$(basename "$0")" = "pass" ] && [[ "$1" =~ ^(-r|--remove) ]]; then
    for arv in "${@:2}"; do
        export arv
        if [[ "${arv}" =~ ^(-[a-z]|-[A-Z]|-[0-9]|--[a-z]|--[A-Z]|--[0-9]) ]]; then
            echo -e "\e[1mUnknown argument ${arv}\e[0m\n"
        elif [ ! -e "${arv}" ]; then
            echo -e "\e[1mUnfound\e[1m\n"
        elif ! grep "pass" "${arv}" >/dev/null; then
            echo -e "\e[1m$(basename "${arv}") already not secured\e[0m\n"
            chmod a-w "${arv}"
        elif grep "pass" "${arv}" >/dev/null; then
            read -rsp "Enter $(basename "${arv}") password: " pass
            echo
            de_c=$(python3 -c "
import os
import sys
import base64
from Crypto.Cipher import AES
from Crypto.Util.Padding import *

key = open('/etc/.raulm/.Ye/.key', 'rb').read()
with open('/usr/local/.ko/.Yeiv', 'rb') as fi:
    for line in fi:
        if os.path.basename(os.environ['arv'].encode()) in line:
            pass_hash = base64.b64decode(line.split(b':')[1].strip(b'\n'))
with open('/var/.Hj/.Yerws', 'rb') as file:
    for lin in file:                                                                                                                                          
        if os.path.basename(os.environ['arv'].encode()) in lin:
            cipher = AES.new(key, AES.MODE_CBC, iv=base64.b64decode(lin.split(b':')[1].strip(b'\n')))
            print(unpad(cipher.decrypt(pass_hash), AES.block_size).decode())")

            if [ "${pass}" != "${de_c}" ]; then
                echo -e "\e[1;31mWrong"
                chmod a-w "${arv}"
                exit
            fi
            sed -i "2,4d" "${arv}"
            sed -i "/$(basename "${arv}"):/d" /var/.Hj/.Yerws /usr/local/.ko/.Yeiv
            chmod a+rwx "${arv}"
            echo -e "\e[1;33m$(basename "${arv}") security desabled\e[\n0m\n"
            if [ ! -s /var/.Hj/.Yerws ] && [  ! -s /usr/local/.ko/.Yeiv ]; then
                rm /var/.Hj/.Yerws /usr/local/.ko/.Yeiv
            fi
        fi
    done
elif [ "$(basename "$0")" = "pass" ]; then
    for arg in "$@"; do
        export arg
        if [[ "${arg}" =~ ^(-[a-z]|-[A-Z]|-[0-9]|--[a-z]|--[A-Z]|--[0-9]) ]]; then
            echo -e "\e[1mUnknown argument ${arv}\e[0m\n"
        elif [ ! -e "${arg}" ]; then
            echo -e "\e[1mUnfound\e[1m\n"
        elif grep "pass" "${arg}" >/dev/null; then
            echo -e "\e[1m$(basename "${arg}") already secured\e[0m\n"
            chmod a-w "${arg}"
        elif ! grep "pass" "${arg}" >/dev/null; then
            sed -i "2i\ \npass" "${arg}"
            if trap '' SIGINT; then
                read -rsp "Creat $(basename "${arg}") password: " passwd
                echo
                export passwd 
            fi
            python3 -c "
import os
import sys
import base64
from Crypto.Cipher import AES
from Crypto.Util.Padding import *

key = open('/etc/.raulm/.Ye/.key', 'rb').read()
cipher = AES.new(key, AES.MODE_CBC)
with open('/usr/local/.ko/.Yeiv', 'a') as f:
    f.write(os.path.basename(os.environ['arg']) + f.write(':')
with open('/var/.Hj/.Yerws', 'a') as fv:
    fv.write(os.path.basename(os.environ['arg']) + fv.write(':')
with open('/usr/local/.ko/.Yeiv', 'ab') as fb:
    fb.write(cipher.encrypt(pad(base64.b64encode(os.environ['passwd'].encode()), AES.block_size)) + fb.write(b'\n')
with open('/var/.Hj/.Yerws', 'ab') as fbv:
        fbv.write(base64.b64encode(cipher.iv) + fbv.write(b'\n'))"
            chmod go-rwx "${arg}"
            chmod a-w "${arg}"
            echo -e "\e[1;32m$(basename "${arg}") password successfully created\e[\n0m\n"
        fi
    done
fi
